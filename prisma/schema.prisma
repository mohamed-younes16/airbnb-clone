generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")

}

model User {
  id           String        @id @unique @default(cuid())
  name         String
  username     String
  imageUrl     String
  reservations Reservation[] @relation("reservation_owner")
  listing      Listing[]     @relation("listing_owner")
  favourites   Listing[]     @relation("favourited_user")
  bio          String
  onboarded    Boolean
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@unique([name])
  @@index([id])
}

model Listing {
  id            String        @id @unique @default(cuid())
  ownerId       String
  owner         User          @relation("listing_owner", fields: [ownerId], onDelete: Cascade, references: [id])
  title         String
  images        String[]
  description   String
  roomCount     Int
  guestCount    Int
  bathroomCount Int
  reservations  Reservation[] @relation("reservation_listing")
  price         Int
  category      String
  favouritedBy  User[]        @relation("favourited_user")
  locationValue String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([id])
}

model Reservation {
  id         String   @id @unique @default(cuid())
  ownerId    String
  owner      User     @relation("reservation_owner", fields: [ownerId], onDelete: Cascade, references: [id])
  listingId  String
  listing    Listing  @relation("reservation_listing", fields: [listingId], onDelete: Cascade, references: [id])
  totalPrice Int
  totalDays  Int
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  review     Review?  @relation("reservation_Review")

  @@index([id])
}

model Review {
  id            String      @id @unique @default(cuid())
  reservationId String      @unique
  reservation   Reservation @relation("reservation_Review", fields: [reservationId], references: [id], onDelete: Cascade)
  message       String      @default("")
  stars         Int         @default(1)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([id])
}
